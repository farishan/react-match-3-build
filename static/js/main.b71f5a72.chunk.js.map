{"version":3,"sources":["components/Score.js","components/Tile.js","features/tile/tileSlice.js","features/score/scoreSlice.js","components/Tiles.js","config.js","helpers.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["Score","useSelector","state","score","moves","Tile","value","isActive","props","style","width","height","border","borderColor","String","setTiles","createAsyncThunk","options","a","tileSlice","createSlice","name","initialState","tiles","activeTiles","reducers","generateTiles","action","payload","x","y","index","xTiles","yIndex","push","Math","ceil","random","setActiveTiles","selectTile","id","includes","extraReducers","fullfiled","actions","scoreSlice","increment","decrement","Tiles","dispatch","useDispatch","tile","useState","tilesLocal","setTilesLocal","useEffect","handleClick","rowIndex","colIndex","alert","window","location","reload","newActiveTiles","length","source","target","targetRow","parseInt","split","targetCol","sourceRow","sourceCol","isRight","isLeft","isDown","isTop","canSwap","newTiles","row1","col1","row2","col2","clonedTiles","JSON","parse","stringify","tile1","tile2","temp","swapTiles","then","res","result","row","col","possibleRight","X_TILES","possibleRightDouble","possibleLeft","possibleLeftDouble","possibleTop","possibleTopDouble","possibleBottom","Y_TILES","possibleBottomDouble","targetValue","targetRightValue","targetLeftValue","console","log","targetRightRightValue","targetLeftLeftValue","targetTopValue","targetBottomValue","targetTopTopValue","targetBottomBottomValue","checkTiles","callback","key","replaceTile","display","flexDirection","alignItems","map","title","onClick","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","tileReducer","scoreReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b71f5a72.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Score = () => {\r\n  const { score, moves } = useSelector(state => state.score)\r\n\r\n  return <>\r\n    <p>Score(s): {score}</p>\r\n    <p>Click(s): {moves}</p>\r\n  </>\r\n}\r\n\r\nexport default Score","import React from 'react';\r\n\r\nconst Tile = ({value, isActive, ...props}) => {\r\n  const style = {\r\n    width: '50px',\r\n    height: '50px',\r\n    border: '1px solid',\r\n    borderColor: isActive ? 'red' : 'black'\r\n  }\r\n\r\n  return <>\r\n    <div\r\n      style={style}\r\n      {...props}\r\n    >\r\n      {String(value)}\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default Tile","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nexport const setTiles = createAsyncThunk(\r\n  'tile/setTiles',\r\n  async (options) => {\r\n    return options\r\n  }\r\n)\r\n\r\nexport const tileSlice = createSlice({\r\n  name: 'tile',\r\n  initialState: {\r\n    tiles: [],\r\n    activeTiles: []\r\n  },\r\n  reducers: {\r\n    generateTiles: (state, action) => {\r\n      const {x, y} = action.payload\r\n      let tiles = []\r\n\r\n      for (let index = 0; index < y; index++) {\r\n        let xTiles = []\r\n\r\n        for (let yIndex = 0; yIndex < x; yIndex++) {\r\n          xTiles.push(Math.ceil(Math.random()*5))\r\n        }\r\n\r\n        tiles.push(xTiles)\r\n      }\r\n\r\n      state.tiles = tiles\r\n    },\r\n    setActiveTiles: (state, action) => {\r\n      state.activeTiles = action.payload\r\n    },\r\n    selectTile: (state, action) => {\r\n      const { id } = action.payload\r\n      const isActive = state.activeTiles.includes(id)\r\n\r\n      // console.log('select tile:', id, isActive)\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [setTiles.fullfiled]: (state, action) => {\r\n      state.tiles = action.payload\r\n    }\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  generateTiles,\r\n  setActiveTiles,\r\n  selectTile,\r\n} = tileSlice.actions\r\n\r\nexport default tileSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const scoreSlice = createSlice({\r\n  name: 'score',\r\n  initialState: {\r\n    score: 0,\r\n    moves: 20\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.score++\r\n    },\r\n    decrement: (state) => {\r\n      state.moves--\r\n    }\r\n  },\r\n})\r\n\r\nexport const {\r\n  increment,\r\n  decrement\r\n} = scoreSlice.actions\r\n\r\nexport default scoreSlice.reducer","import React, { useEffect, useState } from 'react'\r\nimport Tile from './Tile'\r\nimport {\r\n  canSwap,\r\n  swapTiles,\r\n  checkTiles,\r\n  replaceTile\r\n} from '../helpers'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  generateTiles,\r\n  setTiles,\r\n  setActiveTiles,\r\n  selectTile,\r\n} from \"../features/tile/tileSlice\";\r\nimport { X_TILES, Y_TILES } from '../config'\r\nimport { decrement, increment } from '../features/score/scoreSlice';\r\n\r\nconst Tiles = () => {\r\n  const dispatch = useDispatch()\r\n  const {\r\n    tiles,\r\n    activeTiles\r\n  } = useSelector(state => state.tile)\r\n  const { score, moves } = useSelector(state => state.score)\r\n  const [tilesLocal, setTilesLocal] = useState([])\r\n\r\n  useEffect(() => {\r\n    dispatch(generateTiles({x: X_TILES, y: Y_TILES}))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setTilesLocal(tiles)\r\n  }, [tiles])\r\n\r\n  const handleClick = (rowIndex, colIndex) => {\r\n    if(moves === 0){\r\n      alert(`Game over. Your score: ${score}`)\r\n      window.location.reload()\r\n    } else {\r\n      dispatch(decrement())\r\n\r\n      const id = `${rowIndex}_${colIndex}`\r\n      dispatch(selectTile(id))\r\n\r\n      const isActive = activeTiles.includes(id)\r\n      let newActiveTiles\r\n\r\n      if(isActive === false){\r\n        if(activeTiles.length === 2){\r\n          newActiveTiles = [id]\r\n        }\r\n        else if(activeTiles.length === 1){\r\n          // Swapping tiles\r\n          const source = activeTiles[0]\r\n          const target = id\r\n\r\n          if(canSwap(source, target)){\r\n            const newTiles = swapTiles(source, target, tilesLocal)\r\n\r\n            dispatch(setTiles(newTiles)).then((res) => {\r\n              setTilesLocal(res.payload)\r\n              dispatch(setActiveTiles([]))\r\n              const result = checkTiles(source, target, tilesLocal)\r\n\r\n              if(result !== false){\r\n                dispatch(increment())\r\n                dispatch(generateTiles({x: X_TILES, y: Y_TILES}))\r\n              }\r\n\r\n              if(result === 'match_horizontal'){\r\n                // Test replace tile\r\n                const newTile = {\r\n                  key: '1_1',\r\n                  value: 'X'\r\n                }\r\n                replaceTile(newTile, tilesLocal, (newTiles) => dispatch(setTiles(newTiles)))\r\n              }\r\n            })\r\n          }\r\n        } else {\r\n          // Selecting tile\r\n          newActiveTiles = [...activeTiles, id]\r\n          dispatch(setActiveTiles(newActiveTiles))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n      {\r\n        tilesLocal.map((row, rowIndex) => (\r\n          <div style={{display: 'flex'}} key={rowIndex}>\r\n            {\r\n              row.map((col, colIndex) => (\r\n                <Tile\r\n                  key={`${rowIndex}_${colIndex}`}\r\n                  title={`${rowIndex}_${colIndex}`}\r\n                  value={col}\r\n                  onClick={() => handleClick(rowIndex, colIndex)}\r\n                  isActive={activeTiles.includes(`${rowIndex}_${colIndex}`)}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default Tiles","export const X_TILES = 5\r\nexport const Y_TILES = 5","import { X_TILES, Y_TILES } from \"./config\"\r\n\r\nexport function swapTiles(source, target, tiles){\r\n  const row1 = source.split('_')[0]\r\n  const col1 = source.split('_')[1]\r\n  const row2 = target.split('_')[0]\r\n  const col2 = target.split('_')[1]\r\n\r\n  let clonedTiles = JSON.parse(JSON.stringify(tiles))\r\n  const tile1 = clonedTiles[row1][col1]\r\n  const tile2 = clonedTiles[row2][col2]\r\n\r\n  const temp = tile1\r\n  clonedTiles[row1][col1] = tile2\r\n  clonedTiles[row2][col2] = temp\r\n\r\n  return clonedTiles\r\n}\r\n\r\nexport function canSwap(source, target){\r\n  const targetRow = parseInt(target.split('_')[0])\r\n  const targetCol = parseInt(target.split('_')[1])\r\n  const sourceRow = parseInt(source.split('_')[0])\r\n  const sourceCol = parseInt(source.split('_')[1])\r\n\r\n  const isRight = targetCol-sourceCol === 1 && targetRow === sourceRow\r\n  const isLeft = sourceCol-targetCol === 1 && targetRow === sourceRow\r\n  const isDown = targetRow-sourceRow === 1 && targetCol === sourceCol\r\n  const isTop = sourceRow-targetRow === 1 && targetCol === sourceCol\r\n\r\n  const horizontallyValid = (isRight || isLeft) && (!isTop && !isDown)\r\n  const verticallyValid = (isTop || isDown) && (!isRight && !isLeft)\r\n\r\n  return horizontallyValid || verticallyValid\r\n}\r\n\r\nexport function replaceTile({key, value}, tiles, callback){\r\n  const newTiles = [...tiles]\r\n  const row = parseInt(key.split('_')[0])\r\n  const col = parseInt(key.split('_')[1])\r\n  newTiles[row][col] = value\r\n  callback(newTiles)\r\n}\r\n\r\nexport function checkTiles(source, target, tiles){\r\n  const row = parseInt(target.split('_')[0])\r\n  const col = parseInt(target.split('_')[1])\r\n  const sourceRow = parseInt(source.split('_')[0])\r\n  const sourceCol = parseInt(source.split('_')[1])\r\n\r\n  const possibleRight = col < X_TILES-1\r\n  const possibleRightDouble = col < X_TILES-2\r\n  const possibleLeft = col > 0\r\n  const possibleLeftDouble = col > 1\r\n  const possibleTop = row > 0\r\n  const possibleTopDouble = row > 1\r\n  const possibleBottom = row < Y_TILES-1\r\n  const possibleBottomDouble = row < Y_TILES-2\r\n\r\n  const targetValue = tiles[sourceRow][sourceCol]\r\n\r\n  if(possibleRight && possibleLeft){\r\n    const targetRightValue = tiles[row][col+1]\r\n    const targetLeftValue = tiles[row][col-1]\r\n\r\n    if(\r\n      targetValue === targetRightValue\r\n      && targetValue === targetLeftValue\r\n    ){\r\n      console.log('horizontal-center match!')\r\n\r\n      return 'match_horizontal_center'\r\n    }\r\n  }\r\n\r\n  if(possibleRight && possibleRightDouble){\r\n    const targetRightValue = tiles[row][col+1]\r\n    const targetRightRightValue = tiles[row][col+2]\r\n\r\n    if(\r\n      targetValue === targetRightValue\r\n      && targetValue === targetRightRightValue\r\n    ){\r\n      console.log('horizontal-right match!')\r\n\r\n      return 'match_horizontal_right'\r\n    }\r\n  }\r\n\r\n  if(possibleLeft && possibleLeftDouble){\r\n    const targetLeftValue = tiles[row][col-1]\r\n    const targetLeftLeftValue = tiles[row][col-2]\r\n\r\n    if(\r\n      targetValue === targetLeftValue\r\n      && targetValue === targetLeftLeftValue\r\n    ){\r\n      console.log('horizontal-left match!')\r\n\r\n      return 'match_horizontal_left'\r\n    }\r\n  }\r\n\r\n  if(possibleTop && possibleBottom){\r\n    const targetTopValue = tiles[row-1][col]\r\n    const targetBottomValue = tiles[row+1][col]\r\n    console.log({targetValue, targetTopValue, targetBottomValue})\r\n    if(\r\n      targetValue === targetTopValue\r\n      && targetValue === targetBottomValue\r\n    ){\r\n      console.log('vertical-center match!')\r\n\r\n      return 'match_vertical_center'\r\n    }\r\n  }\r\n\r\n  if(possibleTop && possibleTopDouble){\r\n    const targetTopValue = tiles[row-1][col]\r\n    const targetTopTopValue = tiles[row-2][col]\r\n    if(\r\n      targetValue === targetTopValue\r\n      && targetValue === targetTopTopValue\r\n    ){\r\n      console.log('vertical-top match!')\r\n\r\n      return 'match_vertical_top'\r\n    }\r\n  }\r\n\r\n  if(possibleBottom && possibleBottomDouble){\r\n    const targetBottomValue = tiles[row+1][col]\r\n    const targetBottomBottomValue = tiles[row+2][col]\r\n    if(\r\n      targetValue === targetBottomValue\r\n      && targetValue === targetBottomBottomValue\r\n    ){\r\n      console.log('vertical-bottom match!')\r\n\r\n      return 'match_vertical_bottom'\r\n    }\r\n  }\r\n\r\n  return false\r\n}","import './App.css';\nimport Score from './components/Score';\nimport Tiles from './components/Tiles';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Score />\n      <Tiles />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport tileReducer from './features/tile/tileSlice'\r\nimport scoreReducer from './features/score/scoreSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    tile: tileReducer,\r\n    score: scoreReducer\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}